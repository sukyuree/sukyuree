MAIN	START	1000
.스택 및 스택의 사이즈 크기 설정
FIRST	LDA	#STACK
	STA	TOP
	LDA	ZERO
	STA	SIZE
.A B C D 값을 반복하여 입력받기
LOOP	JSUB	INLOOP
	LDX	ZERO
	LDA	LENGTH
	COMP	ZERO
	JEQ	LOOP
	LDCH	TYPE,X
	COMP	ALPHA_D
	JSUB	WHICH3
	J	LOOP
	
INLOOP	LDX	ZERO
	LDA	ZERO
	STA	TEMP
INER	LDA	TEMP
	COMP	#2
	JEQ	GOBACK
	ADD	#1
	STA	TEMP
	TD	STDIN
	JEQ	INER
	RD	STDIN
	STCH	TYPE,X
	TIX	MAXLEN
	JLT	INER

GOBACK	STX	LENGTH
	RSUB
	
.입력받은 알파벳이 무엇인지 판별하기
WHICH3	JEQ	D
	JLT	WHICH2	

WHICH2	COMP	ALPHA_C
	JEQ	C
	JLT	WHICH1

WHICH1	COMP	ALPHA_B
	JEQ	B
	JLT	A

.A기능 실행
A	LDA	SIZE
	COMP	ZERO
	JEQ	EMPTY
	JGT	A_GO	.스택이 없다면 EMPT출력
A_GO	STL	TEMPL
	JSUB	POP
	LDA	@TOP
	STA	TEMP
	LDA	ZERO
	STA	@TOP
	LDA	TEMP
	COMP	ASEN
	JEQ	A_TEN
	JGT	A_TEN
	JLT	A_ONE

A_ONE	ADD	#48
	WD	STDOUT
	LDA	ASEN
	WD	STDOUT
	LDL	TEMPL
	RSUB		.스택의 수가 1의자리 수일때

A_TEN	STA	TEMP1
	DIV	#10
	ADD	#48
	WD	STDOUT
	SUB	#48
	MUL	#10
	STA	TEMP10
	LDA	TEMP1
	SUB	TEMP10
	ADD	#48
	WD	STDOUT
	LDA	ASEN
	WD	STDOUT
	LDL	TEMPL
	RSUB		.스택의 수가 10의자리 수일때
		



.B기능 실행
B	LDA	SIZE
	ADD	#1
	STA	SIZE	
	LDA	ZERO
	STA	TEMP
	STA	TEMP1
	STA	TEMP10
	STA	BUFFER
	LDX	#1
	STCH	BUFFER,X
	LDX	ZERO
	STCH	BUFFER,X

RLOOP	TD	STDIN
	JEQ	RLOOP
	RD	STDIN
	COMP	ASEN
	JEQ	CHECK
	STCH	BUFFER,X
	TIX	#3
	JLT	RLOOP
	JEQ	CHECK
	JGT	CHECK

CHECK	LDX	#2
	LDCH	BUFFER,X
	COMP	ASEN
	JEQ	STORE	.엔터값이 있다면 10의자리수
	JLT	STORE	.엔터값보다 작다면 1의자리수
	JGT	CANT	.엔터값보다 크다면 오류

STORE	LDX	#1	.1 혹은10의자리수일때 저장
	LDCH	BUFFER,X
	COMP	ASEN
	JLT	ONE
	JGT	TEN

ONE	LDX	#0
	LDCH	BUFFER,X
	SUB	#48
	STA	TEMP1
	STA	TEMP
	STL	TEMPL
	JSUB	B_SEMI
	LDL	TEMPL
	RSUB		.1의자리 수 일때의 저장
	
TEN	LDX	#0
	LDCH	BUFFER,X
	SUB	#48
	MUL	#10
	STA	TEMP10
	LDX	#1
	LDCH	BUFFER,X
	SUB	#48
	STA	TEMP1
	ADD	TEMP10
	STA	TEMP
	STL	TEMPL
	JSUB	B_SEMI
	LDL	TEMPL
	RSUB		.10의자리 수 일때의 저장

B_SEMI	STL	TEMPL2
	LDA	TEMP
	STA	@TOP
	JSUB	PUSH
	LDA	SIZE
	COMP	#5
	JEQ	B_FINAL	.스택이 다 찼다면 모두POP
	LDL	TEMPL2
	RSUB		.스택에 값 저장해주기
	
B_FINAL	JSUB	A_GO
	JSUB	A_GO
	JSUB	A_GO
	JSUB	A_GO
	JSUB	A_GO	.POP 5회 실행 후 프로그램 종료
EOF	J	EOF



.C기능 실행
C	LDA	SIZE
	COMP	ZERO
	JEQ	EMPTY
	JGT	C_GO
C_GO	STL	TEMPL
	LDA	TOP
	SUB	#3
	STA	T_TOP
	LDA	@T_TOP
	STA	TEMP
	COMP	#10
	JEQ	C_TEN
	JGT	C_TEN
	JLT	C_ONE

C_ONE	ADD	#48
	WD	STDOUT
	LDA	ASEN
	WD	STDOUT
	LDL	TEMPL
	RSUB

C_TEN	STA	TEMP1
	DIV	#10
	ADD	#48
	WD	STDOUT
	SUB	#48
	MUL	#10
	STA	TEMP10
	LDA	TEMP1
	SUB	TEMP10
	ADD	#48
	WD	STDOUT
	LDA	ASEN
	WD	STDOUT
	LDL	TEMPL
	RSUB

.D기능 실행
D	LDA	SIZE	.사이즈값을 출력해주기
	ADD	#48
	WD	STDOUT
	LDA	ASEN
	WD	STDOUT
	RSUB


.스택이 비었을 때 EMPTY 출력
EMPTY	LDA	#69
	WD	STDOUT	
	LDA	#77
	WD	STDOUT
	LDA	#80
	WD	STDOUT
	LDA	#84
	WD	STDOUT
	LDA	#89
	WD	STDOUT
	LDA	#10
	WD	STDOUT
	RSUB

.숫자가 0~99가 아닐 때 문구 출력
CANT	LDA	#79
	WD	STDOUT
	LDA	#78
	WD	STDOUT
	LDA	#76
	WD	STDOUT
	LDA	#89
	WD	STDOUT
	LDA	#48
	WD	STDOUT
	LDA	#126
	WD	STDOUT
	LDA	#57
	WD	STDOUT
	LDA	#57
	WD	STDOUT
	LDA	#10
	WD	STDOUT
	J	EOF


PUSH	LDA	TOP
	ADD	#3
	STA	TOP
	RSUB		.스택에PUSH후 TOP의 주소값변경

POP	LDA	TOP
	SUB	#3
	STA	TOP
	LDA	SIZE
	SUB	#1
	STA	SIZE
	RSUB		.스택에서POP후 TOP의 주소값변경

.사용할 각 변수 및 상수 선언
STACK	RESW	5
TOP	RESW	1
T_TOP	RESW	1
SIZE	RESW	1

STDIN	BYTE	0
STDOUT	BYTE	1
ALPHA	BYTE	0
TYPE	RESB	3

MAXLEN	WORD	4096
ASEN	WORD	10
ALPHA_A	WORD	65
ALPHA_B	WORD	66
ALPHA_C	WORD	67
ALPHA_D	WORD	68
ZERO	WORD	0

BUFFER	RESB	4096

TEMP	RESW	1
TEMP1	RESW	1
TEMP10	RESW	1
TEMPL	RESW	1
TEMPL2	RESW	1
LENGTH	RESW	1
